//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v2.61.6049.847 (http://NJsonSchema.org)
// </auto-generated>
//----------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Collections.Specialized;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Runtime.CompilerServices;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;

namespace NJsonSchema.Demo.CodeGeneration
{
    #pragma warning disable // Disable all warnings

    [JsonObject(MemberSerialization.OptIn)]
    [GeneratedCode("NJsonSchema", "2.61.6049.847")]
    public partial class Anonymous : INotifyPropertyChanged
    { 
        private string _firstName; 
        private string _lastName; 
        private DateTime _birthday;
    
        [JsonProperty("FirstName", Required = Required.DisallowNull)]
        [Required]
        public string FirstName
        {
            get { return _firstName; }
            set 
            {
                if (_firstName != value)
                {
                    _firstName = value; 
                    RaisePropertyChanged();
                }
            }
        }
    
        [JsonProperty("LastName", Required = Required.DisallowNull)]
        [Required]
        public string LastName
        {
            get { return _lastName; }
            set 
            {
                if (_lastName != value)
                {
                    _lastName = value; 
                    RaisePropertyChanged();
                }
            }
        }
    
        [JsonProperty("Birthday", Required = Required.Always)]
        [Required]
        public DateTime Birthday
        {
            get { return _birthday; }
            set 
            {
                if (_birthday != value)
                {
                    _birthday = value; 
                    RaisePropertyChanged();
                }
            }
        }
    
        public event PropertyChangedEventHandler PropertyChanged;
    
        public string ToJson() 
        {
            return JsonConvert.SerializeObject(this);
        }
        
        public static Anonymous FromJson(string data)
        {
            return JsonConvert.DeserializeObject<Anonymous>(data);
        }
        
        protected virtual void RaisePropertyChanged([CallerMemberName] string propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null) 
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}