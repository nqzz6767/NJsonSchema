<#@ template visibility="internal" #>
<#if(Model.IsNewableObject){#>
<#=Model.Variable#> = <#=Model.Value#> ? <#=Model.Type#>.fromJS(<#=Model.Value#><#if(Model.HandleReferences){#>, mappings<#}#>) : <#if(Model.HasDefaultValue){#><#=Model.DefaultValue#><#}else{#><any><#=Model.NullValue#><#}#>;
<#}else{#>
<#if(Model.IsArray){#>
if (<#=Model.Value#> && <#=Model.Value#>.constructor === Array) {
    <#=Model.Variable#> = [];
    for (let item of <#=Model.Value#>)
<#if(Model.IsArrayItemNewableObject){#>
        <#=Model.Variable#>.push(<#=Model.ArrayItemType#>.fromJS(item<#if(Model.HandleReferences){#>, mappings<#}#>));
<#}else{#>
<#if(Model.IsArrayItemDate){#>
        <#=Model.Variable#>.push(<#=Model.StringToDateCode#>(item));
<#}else{#>
        <#=Model.Variable#>.push(item);
<#}}#>
}
<#}else{#>
<#if(Model.IsDictionary){#>
if (<#=Model.Value#>) {
    <#=Model.Variable#> = {};
    for (let key in <#=Model.Value#>) {
        if (<#=Model.Value#>.hasOwnProperty(key))
<#if(Model.IsDictionaryValueNewableObject){#>
            <#=Model.Variable#>[key] = <#=Model.Value#>[key] ? <#=Model.DictionaryValueType#>.fromJS(<#=Model.Value#>[key]<#if(Model.HandleReferences){#>, mappings<#}#>) : <#if(Model.HasDefaultValue){#><#=Model.DefaultValue#><#}else{#><any><#=Model.NullValue#><#}#>;
<#}else{#>
<#if(Model.IsDictionaryValueDate){#>
            <#=Model.Variable#>[key] = <#=Model.Value#>[key] ? <#=Model.StringToDateCode#>(<#=Model.Value#>[key].toString()) : <#if(Model.HasDefaultValue){#><#=Model.DefaultValue#><#}else{#><any><#=Model.NullValue#><#}#>;
<#}else{#>
<#  if(Model.HasDefaultValue || Model.NullValue != "undefined"){#>
            <#=Model.Variable#>[key] = <#=Model.Value#>[key] !== undefined ? <#=Model.Value#>[key] : <#if(Model.HasDefaultValue){#><#=Model.DefaultValue#><#}else{#><any><#=Model.NullValue#><#}#>;
<#  }else{#>
            <#=Model.Variable#>[key] = <#=Model.Value#>[key];
<#  }#>
<#}}#>
    }
}
<#}else{#>
    <#if(Model.IsDate){#>
<#=Model.Variable#> = <#=Model.Value#> ? <#=Model.StringToDateCode#>(<#=Model.Value#>.toString()) : <#if(Model.HasDefaultValue){#><#=Model.StringToDateCode#>(<#=Model.DefaultValue#>)<#}else{#><any><#=Model.NullValue#><#}#>;
    <#}else{#>
<#      if(Model.HasDefaultValue || Model.NullValue != "undefined"){#>
<#=Model.Variable#> = <#=Model.Value#> !== undefined ? <#=Model.Value#> : <#if(Model.HasDefaultValue){#><#=Model.DefaultValue#><#}else{#><any><#=Model.NullValue#><#}#>;
<#      }else{#>
<#=Model.Variable#> = <#=Model.Value#>;
<#      }#>
    <#}#>
<#}#>
<#}#>
<#}#>